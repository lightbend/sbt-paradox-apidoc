language: scala
jdk: oraclejdk8
scala: 2.12.8

jobs:
  include:
    - stage: check
      script: sbt scalafmtCheckAll || { echo "[error] Unformatted code found. Please run 'scalafmtAll' and commit the reformatted code."; false; }
      name: "Code style check (fixed with `sbt scalafmtAll`)"
    - script: sbt scalafmtSbtCheck || { echo "[error] Unformatted sbt code found. Please run 'scalafmtSbt' and commit the reformatted code."; false; }
name: "Build code style check (fixed with `sbt scalafmtSbt`)"
    - stage: test
      script: sbt test
      name: "Tests run"
    - stage: publish
      script: sbt ^publish

stages:
  - name: check # runs on master commits and PRs
    if: NOT tag =~ ^v
  - name: test # runs on master commits and PRs
    if: NOT tag =~ ^v
  - name: publish # runs on main repo master commits or version-tagged commits
    if: repo = lightbend/sbt-paradox-apidoc AND ( ( branch = master AND type = push ) OR tag =~ ^v )

cache:
  directories:
    - $HOME/.ivy2/cache
    - $HOME/.sbt

before_cache:
  - find $HOME/.ivy2/cache -name "ivydata-*.properties" -print -delete
  - find $HOME/.sbt        -name "*.lock"               -print -delete

notifications:
  email:
    on_success: never

env:
  global:
    # travis encrypt BINTRAY_USER=...
    - secure: "zLMb0o3lBXTB+LfK79TauazKuSPPKCIgM48blXIFf7P+J7kUXtV6ZhJdDS/48M4pPY4db7MlW8wfsLz+4350KV4T+1SkU26tm7kSnUDnvTNDIoMB9jROxa3p9Pm++0UZOFAo6icgWJQ3d2Tib5Boht+7eFsugcse1tievHcp67eBUB3kk4yGVcuZ+9qg7KlAK0gb+y0Gmf/mQLhcWZxcLgc8DbF+bCD7TMQFo5df2aXEquZhGlPeHR2xCc2H6FyGeHd4jZbDkoj0FrB//WCtjojHsTSiCv51flMdIqZ6IFUFlgivMbKFHBwa+fjPt4McVXIZuiMH0pX/gZOoU7R4E/gpTxXSYHFcrkT9SosqJrIH0aUKIBAXW2xxF3BusoA4CZkfVuGr8EIHVevlALT/DHbhF54524OEJqObcBQmjRVgCVTHZJA6ZPomQupHnz1frCTX8qNY0xzNXfFIP7sW+4qx0Ee4Pqjz5aFDKjBtGB/2qkLU1sjRZb1+nxtY3IM1P2vDlv62Bxxt1bP72i8X2KUl9cPVTTVbW68k4vz615Ce5OQ/JtQDXWcmxQVs/6s8UlPGzPrwLu2bC11Sv8DimXnapHYoMYj87HIpISsx5souZM8m57MDyAGooCwMicABownDe2BggnJZhUbLJYWjP1QuhJQMU5EO7ktFNAYaUBw="
    # travis encrypt BINTRAY_PASS=...
    - secure: "fblSSLOUoSPktFeg7D+BmDlAJ7l7Ca5Vxb8CO9H0Y09vilhP3Ey3uHgJM898xErh33KfSR5l7+pD3wZ1gqu2J8Qc0YepWcKhvSnMaUG2Tl0j6KqAgV8byyFjKtAi+K+bmX3wmoyWLAv43LP8DL3OEC0AHdVkl4UZs5Aw49OQrq1/zjy92LwXVWxEhSoyqrWULcjnbEJn0q06BTqbEAlvZR3RElh340Vi9ZbmyANkPJKlmYmdr0GsyUieNTKoJMv9FVmckyctUA1dmO+e16IQQV5iKuGvxDX3tOY9tKHM1jL+QE7TIbbE3fyy63ozzyFmXfFOM5BdR6pbxWWkGfZYpoK/hXl+NIIbEf8MZ6+gfQkS4o3EiXGDztkGZVMmUsforIK7vidY3zUq6PLfjcCjn8DLglizk/reKsz5Xylio2Kc687ALgoaTbG1vP9WJO3AvBq6bQjiCNQSwX+dPeEOBNB+ywFYZ/8t7eJYQZrBNsLaT/0jAvinqlXIYnYiTVZas5xasKWZHBA0UlUfdQd5/jAzXC1BIHWqEBcXbnx1bKEFcmIy6MFyH81NTs59AAsCJwTRa0zSXsk295ylxNZkkkOsLtE0WOsb3Onz4gmU9EaORKKVqeY3gcsfhUt0usjoWgXc6BexmJjlAZX+OeD3gnLB2H71owmM8Yf/Iy/HYKc="
